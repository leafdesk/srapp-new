generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
  binaryTargets   = ["native", "darwin", "windows"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int      @id @default(autoincrement())
  phone     Int?     @unique
  email     String?  @unique
  name      String
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tokens    Token[]
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Bible {
  id      Int     @id @default(autoincrement())
  book    Int
  chapter Int
  verse   Int
  content String? @db.Text

  @@index([book])
  @@index([chapter])
  @@index([verse])
}

model Contents {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  publishedAt String?
  image       String?
  name        String
  description String   @db.MediumText
  videoId     String?
  kind        String
  subKind     String?
}

model Weekly {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  publishedAt   String?
  volume        Int
  weekNo        Int
  bible         String
  bibleEN       String
  titleKR       String
  titleEN       String?
  descriptionKR String   @db.LongText
  descriptionEN String?  @db.LongText
  hymn1         Int
  hymn2         Int
  pray1         String
  pray2         String
  praise1       String?
  praise2       String?
  praise3       String?
  wedMinister   String?
  wedPray       String?
  friMinister   String?
  nextPray1     String?
  nextPray2     String?
  nextPray3     String?
  orderSermon   String?
  orderSermonEN String?
  orderBible    String?
}

model Post {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  question  String      @db.MediumText
  nickName  String?
  password  String?
  email     String?
  image     String?
  category  String
  kind      String
  answers   Answer[]
  wondering Wondering[]
}

model Answer {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postId    Int
  answer    String   @db.MediumText
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Wondering {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Agency {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  latitude  Float?
  longitude Float?
  range     Float?
}

model Banners {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  image     String?
  name      String?
  link      String?  @db.MediumText
  kind      String?
  startAt   String?
  endAt     String?
}
